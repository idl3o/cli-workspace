/**
 * @param {string} projectDir
 * @param {string} filePath
 * @param {string} [expectedContents]
 */
export function ensureFileHasContents(projectDir: string, filePath: string, expectedContents?: string | undefined): Promise<void>;
/**
 * @param {string} projectDir
 * @param {string} filePath
 */
export function ensureFileNotPresent(projectDir: string, filePath: string): Promise<void>;
/**
 * @param {Record<string, any>} obj
 */
export function sortFields(obj: Record<string, any>): Record<string, any> | undefined;
/**
 * @param {Record<string, any>} obj
 */
export function sortExportsMap(obj: Record<string, any>): Record<string, any>;
/**
 * @param {any} manifest
 */
export function sortManifest(manifest: any): any;
/**
 * @param {any} manifest
 * @param {any} manifestFields
 * @param {string} repoUrl
 * @param {string} homePage
 */
export function constructManifest(manifest: any, manifestFields: any, repoUrl: string, homePage?: string): any;
/**
 * Calculate a valid semver range for a monorepo sibling that will result
 * in as few releases as possible - e.g. don't rev "^1.2.0" to "^1.2.1" or
 * "^1.2.0" to "^1.3.0", instead prefer "^1.0.0" as "^1.2.1" and "^^1.3.0"
 * are both covered by that range.
 *
 * @param {string} version
 */
export function calculateSiblingVersion(version: string): string;
//# sourceMappingURL=utils.d.ts.map