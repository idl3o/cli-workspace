/**
 * @typedef {object} Documentation
 * @property {string} moduleName
 * @property {Record<string, string>} Documentation.typedocs
 * @property {Record<string, string>} Documentation.exports
 * @property {string} [Documentation.outputDir]
 *
 * @typedef {import('../utils.js').Project} Project
 * @typedef {td.DeclarationReflection} DeclarationReflection
 */
/**
 * A plugin that creates a `typedoc-urls.json` file in the `dist` folder of the
 * current project that contains URLs that map exported symbol names to published
 * typedoc pages.
 *
 * See `unknown-symbol-resolver-plugin.js` for how it is consumed.
 *
 * @param {td.Application} app
 */
export function load(app: td.Application): void;
export type Documentation = {
    moduleName: string;
    typedocs: Record<string, string>;
    exports: Record<string, string>;
    outputDir?: string | undefined;
};
export type Project = import('../utils.js').Project;
export type DeclarationReflection = td.DeclarationReflection;
export type ProjectContext = {
    outputDir?: string | undefined;
    manifestPath: string;
};
import * as td from 'typedoc';
//# sourceMappingURL=type-indexer-plugin.d.ts.map